@page "/orcamentos/details/{id:guid}"
@inject IOrcamentoService OrcamentoService
@inject NavigationManager NavigationManager


<div class="row border border-1 shadow-sm" style="height: 90vh; background: rgb(235, 234, 234);">
    <div class="col-2 border h-100 d-flex flex-column ">
        <div class="flex-grow-1 ">
            <p>
                @_orcamento.Cliente
            </p>
            <p>
                @_orcamento.Veiculo
            </p>
            <p>
                @_orcamento.Placa
            </p>
            <p>
                @_orcamento.Chassi
            </p>
            <div class="d-flex gap-2 border-top">
                <button class="btn-sm btn-success">
                    <i class="bi bi-file-earmark-pdf-fill"></i>
                </button>
                <button class="btn-sm btn-secondary">
                    <i class="bi bi-printer"></i>
                </button>

            </div>
        </div>


        <div class="border-1 border-top border-dark">
            <header class="text-center p-1">
                <p>Totais</p>
            </header>
            <section>
                <p>Produtos</p>
                <p>Cupom</p>
                <p>Desconto</p>
                <p>Frete</p>
                <p>
                    Total
                    <span></span>
                </p>
            </section>
        </div>

    </div>
    <div class="col-10 border h-100 p-1">

        <div class="d-flex gap-2">
            <div>
                <button @onclick="ShowModal" class="btn btn-primary"><i class="bi bi-box"></i></button>
            </div>
            <div class="flex-grow-1">
                @if (ShowModalProduto)
                {

                    <ModalNewProduct ShowModalProduto="@ShowModalProduto" ModalFechada="HandleModalFechada"
                        CarregarDados="CarregarDados" OrcamentoId="Id" />

                }
            </div>
        </div>
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>Quant</th>
                    <th>Sku</th>
                    <th>Descrição</th>
                    <th>Marca</th>
                    <th>Preço Unitário</th>
                    <th>Total</th>
                    <th>Link/Observação</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var produto in _orcamento.Produtos)
                {
                    <tr>
                        <td>@produto.Quantidade</td>
                        <td>@produto.Sku</td>
                        <td>@produto.NomeProduto</td>
                        <td>@produto.Marca</td>
                        <td>@produto.PrecoVenda.ToString("C")</td>
                        <td>@Total(produto.Quantidade, produto.PrecoVenda).ToString("C")</td>
                        <td>
                            <a href="@produto.Link" target="_blank">
                                <i class="bi bi-browser-chrome"></i>
                            </a>
                        </td>
                        <td>
                            <button class="btn-info"><i class="bi bi-pencil-square"></i></button>
                            <button class="btn-danger" @onclick="async ()  => await RemoveProduto(produto.Id)"><i
                                    class="bi bi-trash"></i></button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>




@code {
    [Parameter]
    public Guid Id { get; set; }

    Models.Orcamento _orcamento { get; set; } = new();


    public bool ShowModalProduto { get; set; } = false;

    void ShowModal()
    {
        ShowModalProduto = !ShowModalProduto;
    }

    private void HandleModalFechada(bool modalFechada)
    {
        ShowModalProduto = modalFechada;
    }

    private async Task CarregarDados()
    {
        try
        {
            _orcamento = await OrcamentoService.GetOrcamentoById((Guid)Id);
        }
        catch
        {
            NavigationManager.NavigateTo("orcamentos");
        }
    }

    private async Task RemoveProduto(Guid id)
    {
        await OrcamentoService.RemoveProdutoOrcamentoAsync((Guid)id);
        await CarregarDados();
    }

    public double Total(int quantidade, double preco)
    {
        return quantidade * preco;
    }


    protected override async Task OnInitializedAsync()
    {
        await CarregarDados();

    }
}
